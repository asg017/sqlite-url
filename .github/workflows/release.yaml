name: "release"
on:
  release:
    types: [published]
  workflow_dispatch:
permissions:
  contents: read
jobs:
  build-linux_x86-extension:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install deps
        run: sudo apt-get update && sudo apt-get install autoconf -y
      - name: Build curl
        run: |
          cd curl
          autoreconf -fi
          ./configure  --without-brotli --without-libpsl --without-nghttp2 --without-ngtcp2 --without-zstd --without-libidn2 --without-librtmp --without-zlib --without-ssl
          make
      - name: Build + Test
        run: make loadable
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-url-linux_x86
          path: dist/url0.so
  build-linux_x86-python:
    runs-on: ubuntu-20.04
    needs: [build-linux_x86-extension]
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          name: sqlite-url-linux_x86
          path: dist/
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: make python
      - run: make datasette
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-url-linux_x86-wheels
          path: dist/wheels/*.whl
  build-macos-extension:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
      - name: Install deps
        run: brew install autoconf automake libtool
      - name: Build curl
        run: |
          cd curl
          autoreconf -fi
          ./configure  --without-brotli --without-libpsl --without-nghttp2 --without-ngtcp2 --without-zstd --without-libidn2 --without-librtmp --without-zlib --without-ssl
          make
      - run: make loadable
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-url-macos
          path: dist/url0.dylib
  build-macos-python:
    runs-on: macos-latest
    needs: [build-macos-extension]
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v3
        with:
          name: sqlite-url-macos
          path: dist/
      - uses: actions/setup-python@v3
      - run: pip install wheel
      - run: make python
      - run: make datasette
      - uses: actions/upload-artifact@v3
        with:
          name: sqlite-url-macos-wheels
          path: dist/wheels/*.whl
  upload-extensions:
    name: Upload release assets
    needs: [build-macos-extension, build-linux_x86-extension]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: asg017/upload-spm@main
        id: upload-spm
        with:
          name: sqlite-url
          github-token: ${{ secrets.GITHUB_TOKEN }}
          platforms: |
            linux-x86_64:     sqlite-url-linux_x86/*
            macos-x86_64:     sqlite-url-macos/*
  upload-deno:
    name: Upload Deno release assets
    needs: [build-macos-extension, build-linux_x86-extension]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v2
      - uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const script = require('.github/workflows/upload-deno-assets.js')
            await script({github, context})
  upload-npm:
    needs: [build-macos-extension, build-linux_x86-extension]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download workflow artifacts
        uses: actions/download-artifact@v2
      - run: |
          cp sqlite-url-linux_x86/url0.so npm/sqlite-url-linux-x64/lib/url0.so
          cp sqlite-url-macos/url0.dylib npm/sqlite-url-darwin-x64/lib/url0.dylib
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          registry-url: "https://registry.npmjs.org"
      - name: Publish NPM sqlite-url-linux-x64
        working-directory: npm/sqlite-url-linux-x64
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish NPM sqlite-url-darwin-x64
        working-directory: npm/sqlite-url-darwin-x64
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Publish NPM sqlite-url
        working-directory: npm/sqlite-url
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  upload-gem:
    needs: [build-macos-extension, build-linux_x86-extension]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2
      - run: |
          rm bindings/ruby/lib/*.{dylib,so,dll} || true
          cp sqlite-url-macos/*.dylib bindings/ruby/lib
          gem -C bindings/ruby build -o x86_64-darwin.gem sqlite_url.gemspec
        env:
          PLATFORM: x86_64-darwin
      - run: |
          rm bindings/ruby/lib/*.{dylib,so,dll} || true
          cp sqlite-url-linux_x86/*.so bindings/ruby/lib
          gem -C bindings/ruby build -o x86_64-linux.gem sqlite_url.gemspec
        env:
          PLATFORM: x86_64-linux
      - run: |
          gem push bindings/ruby/x86_64-linux.gem
          gem push bindings/ruby/x86_64-darwin.gem
        env:
          GEM_HOST_API_KEY: ${{ secrets.GEM_HOST_API_KEY }}
  upload_pypi:
    needs: [build-linux_x86-python, build-macos-python]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-url-linux_x86-wheels
          path: dist
      - uses: actions/download-artifact@v3
        with:
          name: sqlite-url-macos-wheels
          path: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip_existing: true
